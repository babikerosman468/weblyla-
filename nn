USE lula_support;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS activities;
DROP TABLE IF EXISTS groups;

Or in one line:

USE lula_support; DROP TABLE IF EXISTS users, activities, groups;


---


SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS users, activities, groups;
SET FOREIGN_KEY_CHECKS=1;

✅ This will force drop and fix any dependency blocking.


---

CREATE DATABASE IF NOT EXISTS lula_support;
USE lula_support;

CREATE TABLE groups (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
) ENGINE=InnoDB;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150),
    phone VARCHAR(50),
    role ENUM('student', 'helper') NOT NULL,
    group_id INT,
    FOREIGN KEY (group_id) REFERENCES groups(id)
) ENGINE=InnoDB;

CREATE TABLE activities (
    id INT AUTO_INCREMENT PRIMARY KEY,
    group_id INT,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    scheduled_at DATETIME,
    FOREIGN KEY (group_id) REFERENCES groups(id)
) ENGINE=InnoDB;

Also, always specify ENGINE=InnoDB for foreign keys (MyISAM won’t enforce them).



✅ Next steps

1️⃣ Save the fixed file.
2️⃣ In MariaDB shell:

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS activities;
DROP TABLE IF EXISTS groups;

3️⃣ Re-run:

SOURCE ~/mariadb/lula/lula_setup.sql;


Perfect! Let’s do this step by step — first the test INSERT SQL, then the Node.js connection snippet.


---

✅ 1️⃣ Add some test data

INSERT INTO groups (name, description)
VALUES ('Medical Helpers', 'Group helping stressed students cope with trauma');

INSERT INTO users (name, email, phone, role, group_id)
VALUES ('Lula', 'lula@example.com', '123456789', 'helper', 1);

INSERT INTO activities (group_id, title, description, scheduled_at)
VALUES (1, 'Trauma Workshop', 'Online session to discuss stress relief techniques', NOW());

👉 Run these inside your MariaDB [lula_support]> shell.


---

✅ 2️⃣ Check that they’re inserted

After running the inserts, check:

SELECT * FROM groups;
SELECT * FROM users;
SELECT * FROM activities;


---

✅ 3️⃣ Node.js connection snippet (server6.js)

Below is a basic example you can copy into your server6.js:

const mariadb = require('mariadb');

// Create a pool or single connection
const pool = mariadb.createPool({
  host: 'localhost',
  user: 'root',
  password: 'babsroot',
  database: 'lula_support'
});

// Example: test query
pool.getConnection()
  .then(conn => {
    return conn.query("SELECT * FROM users")
      .then(rows => {
        console.log(rows); // output users
        conn.end();
      })
      .catch(err => {
        console.error(err);
        conn.end();
      });
  })
  .catch(err => {
    console.error('Connection error:', err);
  });



CREATE TABLE participate (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  skills TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

✅ Notes:

id is an auto-incrementing primary key.

name and email are required.

skills is optional — TEXT lets people write freely.

created_at timestamp to log when they submit.


